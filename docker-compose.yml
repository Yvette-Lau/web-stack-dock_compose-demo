version: "3.9"
services:
  db:
    build: ./db
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./db/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    env_file:
      - ./.env
    # environment:
    #   - POSTGRES_DB=postgres
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: "pg_isready --username=postgres && psql --username=postgres --list"
      # test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 5s
      retries: 5

  django:
    build: ./web/
    restart: always
    command: >
      sh -c "python manage.py collectstatic --noinput 
      && python manage.py makemigrations
      && python manage.py migrate
      && uwsgi --ini mysite_uwsgi.ini"
    volumes:
      - uwsgi_data:/tmp/uwsgi/
      - web_static:/code/static/
      - web_static:/var/www/mysite/assets/
      - web_media:/code/media/
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    

  nginx:
    build: ./nginx/
    restart: always
    volumes:
      - uwsgi_data:/tmp/uwsgi/
      - web_static:/var/www/mysite/assets/:ro
    ports:
      - "8888:80"
    depends_on: 
      - django

volumes:
  uwsgi_data:
  web_static:
  web_media:
  postgres_data: